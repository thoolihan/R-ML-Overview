Machine Learning in R
========================================================
author: Tim Hoolihan (@thoolihan)
date: 2018.05.04
autosize: true

Engage
========================================================
* Questions
* Feedback
* Use #2018--purple channel
* Some questions will get answered at the end of the session time permitting
* I'll respond to anything else I can after the session
  * Except during the Avengers :)
  
![Questions? Feedback?](images/StirTrek2018-SessionSlack.png)

About the Talk
========================================================

1. Super-brief crash course in R
2. What is machine learning
3. What does it look like in R
4. Where to go to learn more

R
========================================================
- An implementation of the S language, that has evolved on it's own
- Built-in support for Statistics
- Lots of packages for a variety of STEM domains
  - Considered a large reason for the growth of the R Community
- Integrations with a lot of systems (Most RDBMSs, Hadoop, Spark, ElasticSearch, etc)
- [r-project.org](r-project.org)

Unique Things About R Syntax
========================================================
Assignment supports `=`, but `<-` is dominant in practice

```{r}
x <- 5
```

Functions declared through assignment, implied return
```{r}
foo <- function(x, y) {
  return(x + y)
}

# above is the same as below

foo <- function(x, y) {
  x + y
}
```

Vectors and Vector Operations
=======================================================
```{r}
heights <- c(1.7, 1.72, 1.68, 1.6, 1.8)
length(heights)
mean(heights)
sd(heights)

```

Vectors and Vector Operations
=======================================================
```{r}
heights <- c(1.7, 1.72, 1.68, 1.6, 1.8)
feet_per_meter <- 3.28
tmp <- heights * feet_per_meter

# above is preferred and more performant than

tmp <- c()
for(height in heights){
  tmp <- c(tmp, height * feet_per_meter)
}
```

Distributions
=======================================================
```{r}
# normal distribution
heights = rnorm(500, mean = 66, sd = 3.5)
# uniform distrubution added to heights
armspans <- heights + runif(500, min = -3, max = 3)
hist(heights, breaks = 8)
```


Data Frames
=======================================================
```{r}
people <- data.frame(height = heights, armspan = armspans)
head(people)
```

Data Frames
=======================================================
The dim function (dimensions) shows `r dim(people)[1]` observations of `r dim(people)[2]` variables
```{r}
dim(people)
```

Libraries
=======================================================
```{r}
library(ggplot2)
```

Plot Data
=======================================================
```{r}
qplot(x = height, y = armspan, data = people)
```

Formula
=======================================================
- `armspan ~ height` is a formula, can be read as 
```{r}
reg_form <- lm(armspan ~ height, data = people)
```

Regression
=======================================================
- lm is a function to fit a linear model
```{r}
summary(reg_form)$coeff
```
- Remember y = mx + b
  - armspan = `r reg_form$coefficients[['height']]` * height + `r reg_form$coefficients[['(Intercept)']]`
  
Apply Formula
=======================================================
```{r}
people$rline <- predict(reg_form, newdata = people)
people$rline
```
  
Plot Regression
=======================================================
```{r}
ggplot(data = people, aes(x = height)) + 
  geom_point(aes(y = armspan)) + 
  geom_line(aes(y = rline, color = 'regression line'))
```

  
What is Our Regression Formula/Line?
=======================================================
It describes the relationship between the response variable (armspan) and the dependent variable (height). In other words, it describes how armspan is expected to change when height changes. 

How It Was Created
=======================================================
We did not explicitly program the relationship with rules, we used an alogorithm that could infer the relationship based on example data. 

Does The Relationship Hold?
=======================================================
Let's assume that was real data from American adults (18-50) measured in the last 10 years...
- Is the relationship valid for modern people in France?
- Is the relationship valid for children?
- Is the relationship valid for senior citizens?
- Is the relationship valid for ancient Neanderthal men?

This Is Machine Learning
=======================================================
The model to describe the relationship can be used to to predict the response variable, based on the input variable(s). It's not a perfect predictor, but can be a useful prediction. Among other considerations, it's best that you're trying to predict on a subject that is of the same type as the data used to train the model. 

As an example, our model for American adults should not be applied to children, as they were not represented in the set and have meaningful physiological differences.


So Let's Make a Prediction
=======================================================
We meet someone new with a height of 70 inches. What does our model predict their armspan is?
```{r}
new_person = list(height = 70)
predict(reg_form, newdata = new_person)
```

A Word on Data Sets
=======================================================
# When Supervised Learning...
## Train
Data used to train and tune the algorithm

## Validation
Data used to validate the model being built

## Test

I Thought R Was "Good" At Machine Learning
=======================================================
- Caret
  - Functions for splitting data into test and train sets


